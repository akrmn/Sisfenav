# Sistema Ferroviario Nacional de Venezuela

## Integrantes

Génessis Sánchez 11-10935
Moisés Ackerman  11-10005

## Contenido
.
├── LEEME.txt             // Este archivo.
│
├── Protocolo.docx        // Archivo con la definición del protocolo
│                         // (también entregado en físico).
│
├── RPC                   // Carpeta con la versión del proyecto que utiliza
│   │                     // Remote Procedure Call.
│   │
│   ├── Makefile.reserva_bol  // Makefile RPC.
│   ├── reserva_bol_client.c  // Código del cliente escrito por nosotros.
│   ├── reserva_bol_clnt.c    // Código talón del cliente generado por rpcgen.
│   ├── reserva_bol.h         // Cabecera del servidor y el cliente generado
│   │                         // por rpcgen.
│   ├── reserva_bol_server.c  // Código del servidor escrito por nosotros.
│   ├── reserva_bol_svc.c     // Código talón del servidor generado por rpcgen.
│   ├── reserva_bol.x         // Archivo .x suministrado a rpcgen, escrito por
│   │                         // nosotros.
│   └── reserva_bol_xdr.c     // Archivo generado por rpcgen para manejar tipos
│                             // de dato estructurados.
└── sockets               // Carpeta con la versión del proyecto que utiliza
    │                     // sockets operados de forma manual.
    ├── Makefile.reserva_bol  // Makefile sockets.
    ├── reserva_bol_client.c  // Código del cliente escrito por nosotros.
    └── reserva_bol_server.c  // Código del servidor escrito por nosotros.

## Qué hace el programa

Dado que ambas versiones funcionan externamente de la misma manera con contadas
excepciones, en esta sección nos referiremos a ambas indistintamente,
mencionando las diferencias cuando existiesen.

### Servidor
Al ser ejecutado, el servidor genera un arreglo de puestos del tamaño
solicitado [RPC: de tamaño fijo definido a través de constantes], marcándolas
como vacías, y luego espera que un cliente se conecte. Cuando esto ocurre, el
servidor espera un mensaje de la forma `n:m;`, que representa una solicitud
para el puesto en la fila n y en la columna m. Luego, si el puesto está libre,
se marca como ocupado y se notifica al cliente que la reserva fue exitosa (0).
Si está fuera del rango manejado por el servidor, se notifica (3).
Si está ocupado y no quedan puestos libres, se notifica (2).
Si está ocupado y quedan puestos libres, se notifica (1), y además se envía una
lista con los puestos disponibles.

### Cliente
Al ser ejecutado, establece una conexión con el servidor indicado y a través
del puerto indicado [RPC: no se indica puerto]. Luego, envía el mensaje
correspondiente al puesto solicitado al servidor y espera la respuesta.
Cuando recibe la respuesta, la presenta en un formato amigable al usuario,
explicando, si es necesario, qué debe hacer para concretar su reserva.

## Ejecución

### Sockets

Servidor: ./reserva_bol_server -p <puerto> -r <filas> -c <columnas>
    Todos los argumentos son opcionales, y de no indicarse alguno se usa su
    valor por omisión: 8888 para el puerto, 4 para las filas y 10 para las
    columnas. Como se programó en inglés, se usa -r para la bandera de las
    filas, por "rows".

Cliente: ./reserva_bol_client -h <hostname> -p <puerto> -r <fila> -c <columna>
    Todos los argumentos son obligatorios. El hostname puede ser una dirección
    ip o un nombre de dominio. El puerto debe ser el mismo del servidor.

### RPC

Servidor: ./reserva_bol_server
    No se suministran valores. El tamaño del vagón es especificado mediante
    constantes directamente en el código.

Cliente: ./reserva_bol_client -h <hostname> -r <fila> -c <columna>
    Todos los argumentos son obligatorios. El hostname puede ser una dirección
    ip o un nombre de dominio. No se suministra un número de puerto dado que
    la implementación del protocolo RPC se encarga de manejar el puerto.

## Condiciones particulares

Reiteramos que en la versión RPC del programa el tamaño del vagón es
especificado directamente en el código. Por otro lado, en la versión con
sockets existen valores máximos definidos para las filas y columnas del vagón,
que pueden ser cambiados en el código.

Para dejar más claro el uso de los programas cliente, decidimos usar una
bandera, -h, para especificar el hostname o IP del servidor con el cual se
desea conectar.

Por otro lado, volvemos a mencionar que se programó en inglés y que por lo
tanto las banderas utilizadas para ejecutar los distintos programas están
pensadas en ese idioma.
